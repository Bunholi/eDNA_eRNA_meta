dplyr::summarize(count_by_ext = n())%>%
complete(DNA_extr, fill=list(count_by_ext=0))
bar_ext1<-ggplot(data = data_ex_to_summary, aes(x = type_organism, y= count_by_ext, fill = DNA_extr)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=alpha(c("lightskyblue2","#b3cde3","#8c96c6","#8856a7","#810f7c"), 0.8), name=NULL,
labels=c("CTAB", "PCI", "QBT Kit", "QPS Kit", "QPW Kit"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count_by_ext), size=3,
position = position_dodge(0.9),
color="black",vjust = 0,hjust = 0.5)+
theme_classic() +
xlab("")+
ylab("Number of studies (n = 129)")+
theme(legend.position=c(0.9, 0.9))+
#theme(legend.position = "top")+
ggtitle("a)") +
set
data_ex_to_summary<- data_extr_to%>%
filter(type_organism %in% c("Fish", "Non target", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))%>%
group_by(type_organism, DNA_extr) %>%
dplyr::summarize(count_by_ext = n())%>%
complete(DNA_extr, fill=list(count_by_ext=0))
bar_ext1<-ggplot(data = data_ex_to_summary, aes(x = type_organism, y= count_by_ext, fill = DNA_extr)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=alpha(c("lightskyblue2","#b3cde3","#8c96c6","#8856a7","#810f7c"), 0.8), name=NULL,
labels=c("CTAB", "PCI", "QBT Kit", "QPS Kit", "QPW Kit"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count_by_ext), size=3,
position = position_dodge(0.9),
color="black",vjust = 0,hjust = 0.5)+
theme_classic() +
xlab("")+
ylab("Number of studies (n = 129)")+
theme(legend.position=c(0.9, 0.9))+
#theme(legend.position = "top")+
ggtitle("a)") +
set
bar_ext1
#Separating papers with more than 1 system (one each row)
data_ext_sy<- data%>%
mutate(system = strsplit(as.character(system), ", ")) %>%
unnest(system)
unique(data_ext_sy$system)
#filtering only 5 most frequent extr method
data_ext_sy<- data_ext_sy %>%
select(system, DNA_extr)%>%
filter(DNA_extr %in% c("QBT_Kit", "QPW_Kit", "QPS_Kit", "PCI", "CTAB")) #kits-only studies that followed manufacture protocol
#Counting and filtering the 5 most common systems
data_ext_sy$DNA_extr<- as.factor(data_ext_sy$DNA_extr)
data_ext_sy$system<- as.factor(data_ext_sy$system)
data_ext_sy_summary<- data_ext_sy%>%
filter(system %in% c("River", "Coastal Ocean", "Lake", "Bay", "Open Ocean"))%>%
group_by(system, DNA_extr) %>%
dplyr::summarize(count_by_ext = n())%>%
complete(DNA_extr, fill=list(count_by_ext=0))
data_ext_sy_summary<- data_ext_sy%>%
filter(system %in% c("River", "Coastal Ocean", "Lake", "Bay", "Coral reef", "Open Ocean"))%>%
group_by(system, DNA_extr) %>%
dplyr::summarize(count_by_ext = n())%>%
complete(DNA_extr, fill=list(count_by_ext=0))
bar_ext2<-ggplot(data = data_ext_sy_summary, aes(x = system, y= count_by_ext, fill = DNA_extr)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=alpha(c("lightskyblue2","#b3cde3","#8c96c6","#8856a7","#810f7c"), 0.8), name=NULL,
labels=c("CTAB", "PCI", "QBT Kit", "QPS Kit", "QPW Kit"))+
scale_x_discrete(limits = c("Coastal Ocean", "River", "Lake", "Bay", "Open Ocean", "Coral reef"))+
geom_text(aes(label = count_by_ext), size=3,
position = position_dodge(0.9),
color="black",vjust = 0,hjust = 0.5)+
theme_classic() +
xlab("")+
ylab("Number of studies (n = 112)")+
theme(legend.position="none")+
#theme(legend.position = "top")+
ggtitle("b)") +
set
bar_ext2
#### Pannel - extraction method ~ organism and system ####
barplots2<-bar_ext1/bar_ext2
barplots2
bar_ext1<-ggplot(data = data_ex_to_summary, aes(x = type_organism, y= count_by_ext, fill = DNA_extr)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values=alpha(c("lightskyblue2","#b3cde3","#8c96c6","#8856a7","#810f7c"), 0.8), name=NULL,
labels=c("CTAB", "PCI", "QBT Kit", "QPS Kit", "QPW Kit"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count_by_ext), size=3,
position = position_dodge(0.9),
color="black",vjust = 0,hjust = 0.5)+
theme_classic() +
xlab("")+
ylab("Number of studies (n = 129)")+
#theme(legend.position=c(0.9, 0.9))+
theme(legend.position = "top")+
ggtitle("a)") +
set
#### Pannel - extraction method ~ organism and system ####
barplots2<-bar_ext1/bar_ext2
barplots2
##Required packages
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggdist)
library(gghalves)
pal <- c("grey", "#159090", "#159090", "#159090", "#159090", "#159090", "#159090")
#separating papers with more than 1 type (one each row)
df<- data%>%
mutate(DNA_RNA = strsplit(as.character(DNA_RNA), ", ")) %>%
unnest(DNA_RNA)
unique(df$DNA_RNA)
#Filtering only the 6 most frequent organisms and counting
data_vol<- df%>%
select("volume_l", "type_organism", "DNA_RNA")%>%
filter(type_organism %in% c("Fish", "Non target", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))%>%
drop_na()%>%
mutate(volume_l=round(as.numeric(volume_l), digits=2))%>%
subset(volume_l!=92.50)
View(data_vol)
#Transforming RNA occurrences into category
data_vol_2<- data_vol %>%
mutate(type_organism = ifelse(DNA_RNA == "RNA", "RNA", type_organism))
#Setting parameters
data_vol_2$type_organism<-factor(data_vol_2$type_organism, levels=c("RNA", "Non target", "Fish", "Bacteria", "Invertebrate", "Phytoplankton", "Protist"))
pal <- c("grey", "#159090", "#159090", "#159090", "#159090", "#159090", "#159090")
#Generating rain cloud plot
vol.org<-data_vol_2 %>%
group_by(type_organism) %>%
ggplot(aes(x=type_organism, y=volume_l, fill=type_organism)) +
ggdist::stat_halfeye(
adjust=0.5,
width=0.6,
justification=-0.5,
.width=0,
point_color=NA) +
geom_boxplot(width=0.5, outlier.color = NA, alpha=0.5, position = position_dodge2(width = .8))+
coord_cartesian(xlim=c(1.2, NA))+
scale_y_continuous(breaks = round(seq(min(data_vol_2$volume_l),
max(data_vol_2$volume_l), by = 2),1))+
geom_point(aes(group=DNA_RNA),
size = 1.6,
alpha = 0.2,
position = position_jitter(
seed = 1, width = .2
))+
# Themes and Labels
scale_color_manual(values = pal, guide = "none") +
scale_fill_manual(values = pal, guide = "none") +
scale_shape_manual(values=c(19,8))+
theme_minimal() +
theme(axis.text.x=element_text(size = 10, vjust = -0.5),
axis.title.x = element_text(size = 12, vjust = -1),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank())+
labs(x="",
y = "Volume (Liters)") +
coord_flip()
vol.org
#Setting parameters
data_vol_2$type_organism<-factor(data_vol_2$type_organism, levels=c("RNA", "Non target", "Fish", "Bacteria", "Invertebrate", "Phytoplankton", "Protist"))
pal <- c("#9862A3", "#3F85DF", "#3F85DF", "#3F85DF", "#3F85DF", "#3F85DF", "#3F85DF")
#Generating rain cloud plot
vol.org<-data_vol_2 %>%
group_by(type_organism) %>%
ggplot(aes(x=type_organism, y=volume_l, fill=type_organism)) +
ggdist::stat_halfeye(
adjust=0.5,
width=0.6,
justification=-0.5,
.width=0,
point_color=NA) +
geom_boxplot(width=0.5, outlier.color = NA, alpha=0.5, position = position_dodge2(width = .8))+
coord_cartesian(xlim=c(1.2, NA))+
scale_y_continuous(breaks = round(seq(min(data_vol_2$volume_l),
max(data_vol_2$volume_l), by = 2),1))+
geom_point(aes(group=DNA_RNA),
size = 1.6,
alpha = 0.2,
position = position_jitter(
seed = 1, width = .2
))+
# Themes and Labels
scale_color_manual(values = pal, guide = "none") +
scale_fill_manual(values = pal, guide = "none") +
scale_shape_manual(values=c(19,8))+
theme_minimal() +
theme(axis.text.x=element_text(size = 10, vjust = -0.5),
axis.title.x = element_text(size = 12, vjust = -1),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank())+
labs(x="",
y = "Volume (Liters)") +
coord_flip()
vol.org
#Separating papers with more than 1 filter size (one each row)
data_fs<- data%>%
mutate(filter_size_µm = strsplit(as.character(filter_size_µm), ", ")) %>%
unnest(filter_size_µm)
unique(data_fs$filter_size_µm)
data_fs<- data_fs%>%
mutate(filter_size_µm = replace(filter_size_µm, filter_size_µm=="<0.22", "≤0.22"))
unique(data_fs$filter_size_µm)
data_fs<- data_fs%>%
mutate(filter_size_µm = replace(filter_size_µm, filter_size_µm=="0.4_1", ">0.22-1"))
unique(data_fs$filter_size_µm)
#Filtering data - only 6 most frequent organisms
data_fs_f<- data_fs%>%
select(filter_size_µm, type_organism)%>%
filter(type_organism %in% c("Fish", "Non target", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))%>%
drop_na()
#Counting papers
data_fs_summary<- data_fs_f %>%
group_by(type_organism, filter_size_µm) %>%
summarize(count_by_fs = n())
#Reshaping data - long to wide
data_fs_rs<- data_fs_summary %>%
spread(key=type_organism, value=count_by_fs) %>%
replace(is.na(.), 0)
#Adjusting before plotting
data_fs_rs <- data_fs_rs %>%
remove_rownames %>%
column_to_rownames(var="filter_size_µm")
data_fs_rs<- data_fs_rs [c(1,3,2),]
# Adding maximum and minimum to the data
data_fs_spi <- rbind(rep(80,5), rep(0,5), data_fs_rs)
#Plotting spider plot by filter size
colors_bord<- c("#00AFBB", "#E7B800", "#FC4E07")
colors_in<- c("#00AFBB", "#E7B800", "#FC4E07")
#Plotting spider plot by filter size
colors_bord<- c("#E7B800","#00AFBB", "#FC4E07")
colors_in<- c("#E7B800","#00AFBB","#FC4E07")
radarchart(data_fs_spi, axistype=1,
#custom polygon
pcol=colors_bord, pfcol=scales::alpha(colors_in, 0.1), plwd=3 , plty=1,
#custom the grid
cglcol="black", cglty=3, axislabcol="black", caxislabels=seq(0,80,20), cglwd=1.2,
#custom labels
vlcex=1)
##Required packages
library(ggplot2)
library(fmsb)
library(tidyverse)
library(scales)
radarchart(data_fs_spi, axistype=1,
#custom polygon
pcol=colors_bord, pfcol=scales::alpha(colors_in, 0.1), plwd=3 , plty=1,
#custom the grid
cglcol="black", cglty=3, axislabcol="black", caxislabels=seq(0,80,20), cglwd=1.2,
#custom labels
vlcex=1)
legend(x="bottom", legend = rownames(data_fs_spi[-c(1,2),]),
horiz = TRUE, bty = "n", pch=20 , col=colors_in ,
text.col = "black", cex=1.2, pt.cex=2)
View(data)
#Selecting only the columns with binary data
ID_data<- data %>%
select("ASV", "OTU", "Species")
#Generating euler object
prop_venn<- euler(ID_data)
plot(prop_venn, fill=c("#65CFAE", "#FBE36B", "#C9C9C9"))
plot(prop_venn, fill=c("#FBE36B","#65CFAE", "#C9C9C9"))
##Setting time series graphical elements
set<- theme(axis.text.x=element_text(angle=45,vjust = 0.9, hjust=1, size = 11),
axis.text.y=element_text(size = 11),
axis.ticks = element_line(linewidth = 0.5),
axis.title.y = element_text(size = 13, vjust = 2),
legend.title = element_blank(),
legend.text = element_text(size=12))
#### Time series - idtype ####
unique(data$year)
data$year<- as.character(data$year)
#Separating papers with more than 1 type (one each row)
data_time_type<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
unique(data_time_type$id_type)
data<- read.csv("eDNA_RNA_meta_0515.csv") #metadata
#Separating papers with more than 1 type (one each row)
data_time_type<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
unique(data_time_type$id_type)
##General data setup
setwd("/Users/ingridbunholi/Desktop/eDNA_RNA_meta/metadata") #working directory
data<- read.csv("eDNA_RNA_meta_0515.csv") #metadata
#Separating papers with more than 1 type (one each row)
data_time_type<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
unique(data_time_type$id_type)
#Counting studies
data_time_type<- data_time_type %>%
group_by(year, id_type)%>%
summarise(count = n())
#Plot time series per id type
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, linetype=id_type, group=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
set
time_idtype
data$year<- as.character(data$year)
#Separating papers with more than 1 type (one each row)
data_time_type<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
unique(data_time_type$id_type)
#Counting studies
data_time_type<- data_time_type %>%
group_by(year, id_type)%>%
summarise(count = n())
#Plot time series per id type
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, linetype=id_type, group=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
set
time_idtype
#Plot time series per id type
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, group=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
set
time_idtype
#Counting studies
data_time_type<- data_time_type %>%
group_by(year, id_type)%>%
drop_na()%>%
summarise(count = n())
#Plot time series per id type
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, group=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
set
time_idtype
#Separating papers with more than 1 type (one each row)
data_time_type<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)%>%
drop_na()
#Separating papers with more than 1 type (one each row)
data_time_type<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
#Counting studies
data_time_type<- data_time_type %>%
group_by(year, id_type)%>%
summarise(count = n())%>%
drop_na()
#Plot time series per id type
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, group=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
set
time_idtype
custom_colors <- c("Group1" = "#FBE36B", "Group2" = "#65CFAE", "Group3" = "#C9C9C9")
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, group=id_type, color=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
scale_color_manual(values = custom_colors)+
set
time_idtype
time_idtype<- ggplot(data_time_type, aes(x=year, y=count,  color=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
scale_color_manual(values = custom_colors)+
set
time_idtype
custom_colors <- c("#FBE36B", "#65CFAE","#C9C9C9")
time_idtype<- ggplot(data_time_type, aes(x=year, y=count, group=id_type, color=id_type))+
geom_line(linewidth=0.7)+
geom_point()+
labs(x="", y="Number of studies")+
theme_classic()+
scale_x_discrete(breaks=data_time_type$year)+
scale_y_continuous(breaks =c(0,10,20,30,40,50,60,70,80))+
scale_color_manual(values = custom_colors)+
set
time_idtype
data_two<- data%>%
filter(id_type %in% "ASV, OTU")
View(data_two)
data_id<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
unique(data_id$id_type)
id_org<- data_id%>%
group_by(id_type, type_organism)%>%
summarize(count=n())
data_id_plot<- data %>%
filter(type_organism %in% c("Fish", "Non target", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))%>%
group_by(id_type, type_organism)%>%
summarize(count=n())
data_id_plot$id_type[is.na(data_id_plot$id_type)] <- "None"
bar_id<- data_id_plot %>%
ggplot(aes(x=type_organism, y=count, fill=id_type))+
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("steelblue","darkslateblue", "grey","lightpink"))+
scale_x_discrete(limits = c("Not target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protistan"))+
geom_text(aes(label = count), size=3.2,
position = position_dodge(0.9),
color="black",vjust = -0.1,hjust = 0.5)+
theme_classic()+
xlab("")+
ylab("Number of studies")+
theme(legend.position = "top")+
theme(legend.text = element_text(size=10))+
theme(legend.title = element_blank())
bar_id<- data_id_plot %>%
ggplot(aes(x=type_organism, y=count, fill=id_type))+
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("steelblue","darkslateblue", "grey","lightpink"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count), size=3.2,
position = position_dodge(0.9),
color="black",vjust = -0.1,hjust = 0.5)+
theme_classic()+
xlab("")+
ylab("Number of studies")+
theme(legend.position = "top")+
theme(legend.text = element_text(size=10))+
theme(legend.title = element_blank())
bar_id
bar_id<- data_id_plot %>%
ggplot(aes(x=type_organism, y=count, fill=id_type))+
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#FBE36B", "#65CFAE","#C9C9C9", "#483D8B"),
labels=c("ASV", "OTU", "Species", "None"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count), size=3.2,
position = position_dodge(0.9),
color="black",vjust = -0.1,hjust = 0.5)+
theme_classic()+
xlab("")+
ylab("Number of studies")+
theme(legend.position = "top")+
theme(legend.text = element_text(size=10))+
theme(legend.title = element_blank())
bar_id
data_id_plot<- data %>%
filter(type_organism %in% c("Fish", "Non target", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))%>%
group_by(id_type, type_organism)%>%
summarize(count=n())
View(data_id_plot)
data_id_plot$id_type[is.na(data_id_plot$id_type)] <- "None"
View(data_id_plot)
data_id<- data%>%
mutate(id_type = strsplit(as.character(id_type), ", ")) %>%
unnest(id_type)
data_id_plot<- data_id %>%
filter(type_organism %in% c("Fish", "Non target", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))%>%
group_by(id_type, type_organism)%>%
summarize(count=n())
data_id_plot$id_type[is.na(data_id_plot$id_type)] <- "None"
bar_id<- data_id_plot %>%
ggplot(aes(x=type_organism, y=count, fill=id_type))+
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#FBE36B", "#65CFAE","#C9C9C9", "#483D8B"),
labels=c("ASV", "OTU", "Species", "None"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count), size=3.2,
position = position_dodge(0.9),
color="black",vjust = -0.1,hjust = 0.5)+
theme_classic()+
xlab("")+
ylab("Number of studies")+
theme(legend.position = "top")+
theme(legend.text = element_text(size=10))+
theme(legend.title = element_blank())
bar_id
bar_id<- data_id_plot %>%
ggplot(aes(x=type_organism, y=count, fill=id_type))+
geom_bar(stat="identity", position="dodge")+
scale_fill_manual(values=c("#FBE36B", "#65CFAE","#C9C9C9", "#483D8B"), name=NULL,
labels=c("ASV", "OTU", "Species", "None"))+
scale_x_discrete(limits = c("Non target", "Fish", "Bacteria","Invertebrate", "Phytoplankton", "Protist"))+
geom_text(aes(label = count), size=3.2,
position = position_dodge(0.9),
color="black",vjust = -0.1,hjust = 0.5)+
theme_classic()+
xlab("")+
ylab("Number of studies")+
theme(legend.position = "top")+
theme(legend.text = element_text(size=10))+
theme(legend.title = element_blank())
bar_id
